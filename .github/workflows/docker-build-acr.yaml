name: docker-build-to-ACR

on:
  workflow_call:
    inputs:
      workspace:
        required: true
        type: string
      APP_NAME:
        required: true
        type: string
      APP_VERSION:
        required: true
        type: string
      AZ_CONTAINER_REGISTRY:
        required: true
        type: string
      AZ_CONTAINER_NAME:
        required: true
        type: string

jobs:
  docker-build-push:
    runs-on: runner-utility
    # Map the job outputs to step outputs
    # outputs:
    #   output1: ${{ steps.json_properties.outputs.RELEASE_TAG }}
    steps:
      - name: Download workspace artifact
        uses: actions/download-artifact@v2
        with:
          name: workspace
          path: ${{ inputs.workspace }}

      - name: Extract workspace
        run: |
          tar -xzf ${{ inputs.workspace }}/workspace.tar.gz --strip-components 1
        continue-on-error: true

      - name: az cli
        run: |
          az login --federated-token "$(cat $AZURE_FEDERATED_TOKEN_FILE)" --service-principal -u $AZURE_CLIENT_ID -t $AZURE_TENANT_ID
          
      - name: start docker login
        run: |
          az acr login -n ${{inputs.AZ_CONTAINER_NAME}}

      ## Build dockerfile ##
      - name: Build the Docker image
        working-directory: ./app
        run: |
          docker build . --file Dockerfile --tag ${{ inputs.APP_NAME }}:${{ inputs.APP_VERSION }}
          docker tag ${{ inputs.APP_NAME }}:${{ inputs.APP_VERSION }} ${{inputs.AZ_CONTAINER_REGISTRY}}/${{ inputs.APP_NAME }}:${{ inputs.APP_VERSION }}
          docker push ${{inputs.AZ_CONTAINER_REGISTRY}}/${{ inputs.APP_NAME }}:${{ inputs.APP_VERSION }}
 
