name: docker-build-to-ACR

on:
  workflow_call:
    inputs:
      workspace:
        required: true
        type: string
      APP_NAME:
        required: true
        type: string
      APP_VERSION:
        required: true
        type: string
      AZ_CONTAINER_REGISTRY:
        required: true
        type: string
      AZ_CONTAINER_NAME:
        required: true
        type: string
    secrets:
      AZURE_CREDENTIALS: 
        required: true
    # Map the workflow outputs to job outputs
    # outputs:
    #   PACKAGE_VERSION:
    #     description: "The first output string"
    #     value:  ${{ jobs.docker-build-push.outputs.output1 }}

jobs:
  docker-build-push:
    runs-on: runner-utility
    # Map the job outputs to step outputs
    # outputs:
    #   output1: ${{ steps.json_properties.outputs.RELEASE_TAG }}
    steps:
      - name: Download workspace artifact
        uses: actions/download-artifact@v2
        with:
          name: workspace
          path: ${{ inputs.workspace }}

      - name: Extract workspace
        run: |
          tar -xzf ${{ inputs.workspace }}/workspace.tar.gz 
          ls -lrt
        continue-on-error: true
      # - name: Check out repository code
      #   uses: actions/checkout@v3

      # - name: get properties
      #   id: json_properties
      #   run: |
      #     echo "RELEASE_TAG=$(jq -r .version package.json)" >> $GITHUB_OUTPUT
      # - run: |
      #     echo "Build tag==> ${{ steps.json_properties.outputs.RELEASE_TAG }}"

      # - name: Azure login
      #   uses: azure/login@v1
      #   with:
      #     creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: az cli
        run: |
          az login --federated-token "$(cat $AZURE_FEDERATED_TOKEN_FILE)" --service-principal -u $AZURE_CLIENT_ID -t $AZURE_TENANT_ID
          
      - name: start docker login
        run: |
          az acr login -n ${{inputs.AZ_CONTAINER_NAME}}

      ## Build dockerfile ##
      - name: Build the Docker image
        run: |
          docker build . --file Dockerfile --tag ${{ inputs.APP_NAME }}:${{ inputs.APP_VERSION }}
          docker tag ${{ inputs.APP_NAME }}:${{ inputs.APP_VERSION }} ${{inputs.AZ_CONTAINER_REGISTRY}}/${{ inputs.APP_NAME }}:${{ inputs.APP_VERSION }}
          docker push ${{inputs.AZ_CONTAINER_REGISTRY}}/${{ inputs.APP_NAME }}:${{ inputs.APP_VERSION }}
 
