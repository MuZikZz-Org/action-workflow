name: clean-up_namespace
on: 
  workflow_call:
    inputs:
        AKS_RESOURCE_GROUP:
            required: true
            type: string
        AKS_NAME:
            required: true
            type: string          

jobs:
  clean-namespace:
    runs-on: runner-utility
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
          
      - name: az cli
        run: |
          az login --federated-token "$(cat $AZURE_FEDERATED_TOKEN_FILE)" --service-principal -u $AZURE_CLIENT_ID -t $AZURE_TENANT_ID
          az group list

      - name: Check if the pull request is merged
        id: check
        run: |
          if [[ "${{ github.event.pull_request.merged }}" == "true" ]]; then
            echo "Pull Request is merged."
            echo "Base Branch(target branch): ${{ github.event.pull_request.base.ref }}"
            echo "Head Branch(source branch): ${{ github.event.pull_request.head.ref }}"
            branch=${{ github.event.pull_request.head.ref }}
            echo "branch=$branch" >> $GITHUB_OUTPUT
          else
            echo "Pull Request is not merged."
            exit 1
          fi

      - name: Clean up
        id: echo
        run: |  
          echo "Original Branch Name: ${{ steps.check.outputs.branch }}"

          # reformating branch name to namespace
          finalBranchName=$(echo ${{ steps.check.outputs.branch }} | sed "s|/|-|g")
          NAMESPACE="${finalBranchName}"
          echo "Final namespace: ${finalBranchName}"

          az aks get-credentials --resource-group ${{inputs.AKS_RESOURCE_GROUP}} --name ${{inputs.AKS_NAME}}

          # Check if the Kubernetes namespace exists 
          kubectl get namespace $NAMESPACE > /dev/null 2>&1
          if [ $? -eq 0 ]; then
            echo "Namespace $NAMESPACE exists."
            kubectl delete namespace $NAMESPACE
            echo "Deleted namespace $NAMESPACE."
          else
            echo "Namespace $NAMESPACE does not exist."
          fi    
