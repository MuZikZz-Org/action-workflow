name: Pushing Git Version

on:
  workflow_call:
    inputs:
      APP_VERSION:
        required: true
        type: string
      workspace:
        required: true
        type: string
      Runtime:
        required: true
        type: string
      SourceCodeBranch:
        required: true
        type: string

jobs:
  git-push-nodejs:
    if: ${{ inputs.Runtime == 'nodejs' }}
    runs-on: ubuntu-latest 
    steps:
      - name: Download workspace artifact
        uses: actions/download-artifact@v2
        with:
          name: workspace
          path: ${{ inputs.workspace }}

      - name: Extract workspace
        run: |
          tar -xzf ${{ inputs.workspace }}/workspace.tar.gz --strip-components 1
        continue-on-error: true


      - name: Push Git Version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cat package.json
          PackageVersion=${{inputs.APP_VERSION}}
          git config --global user.email 'github-actions@users.noreply.github.com'
          git config --global user.name 'GitHub Actions'
          
          git add ./package.json
          git status
          git commit package.json -m 'Update version to ${PackageVersion}'

          ##Verify Git remote URL##
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git fetch origin
          git remote -v
          git config --list

          git push origin HEAD:${{ inputs.SourceCodeBranch }}
          

  git-push-java:
    if: ${{ inputs.Runtime == 'java' }}
    runs-on: ubuntu-latest 
    steps:
      - name: Download workspace artifact
        uses: actions/download-artifact@v2
        with:
          name: workspace
          path: ${{ inputs.workspace }}

      - name: Extract workspace
        run: |
          tar -xzf ${{ inputs.workspace }}/workspace.tar.gz --strip-components 1
        continue-on-error: true

      - name: Push Git Version
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
        run: |
          cat pom.xml
          PackageVersion=${{inputs.APP_VERSION}}
          git config --global user.email 'github-actions@users.noreply.github.com'
          git config --global user.name 'GitHub Actions'

          git add ./pom.xml
          git status
          git commit pom.xml -m 'Update version to ${PackageVersion}'

          git remote set-url origin https://x-access-token:${{ secrets.GIT_TOKEN }}@github.com/${{ github.repository }}.git
          git push origin HEAD:${{ inputs.SourceCodeBranch }}
