name: Pushing Git Version

on:
  workflow_call:
    inputs:
      APP_VERSION:
        required: true
        type: string
      Runtime:
        required: true
        type: string
      SourceCodeBranch:
        required: true
        type: string

jobs:
  git-push-nodejs:
    if: ${{ inputs.Runtime == 'nodejs' }}
    runs-on: ubuntu-latest 
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with: 
          ref: ${{github.ref_name}}

      - name: Build new version
        run: |
          npm config set git-tag-version false
          npm version ${{inputs.APP_VERSION}} --allow-same-version

      - name: Push Git Version
        # env:
        #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cat package.json
          PackageVersion=${{inputs.APP_VERSION}}
          git config --global user.email 'github-actions@users.noreply.github.com'
          git config --global user.name 'GitHub Actions'
          
          git add ./package.json
          git status
          git commit package.json -m "Update version to ${PackageVersion}"

          git push origin HEAD:${{ inputs.SourceCodeBranch }}
          

  git-push-java:
    if: ${{ inputs.Runtime == 'java' }}
    runs-on: ubuntu-latest 
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with: 
          ref: ${{github.ref_name}}

      - name: Build new version
        run: |
          mvn versions:set -DnewVersion=${{inputs.APP_VERSION}} -U

      - name: Push Git Version
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
        run: |
          cat pom.xml
          PackageVersion=${{inputs.APP_VERSION}}
          git config --global user.email 'github-actions@users.noreply.github.com'
          git config --global user.name 'GitHub Actions'

          git add ./pom.xml
          git status
          git commit pom.xml -m "Update version to ${PackageVersion}"

          git push origin HEAD:${{ inputs.SourceCodeBranch }}
