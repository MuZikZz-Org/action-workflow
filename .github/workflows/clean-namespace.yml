#add to Create_PR
  # outputs:
  #   pull-request-number: ${{ steps.cpr.outputs.pull-request-number }} 

#Calling
  # Clean_namespace:
  #   needs: [env_workflow,Create_PR]
  #   name: Clean up feature namespace after mearge
  #   uses: 
    # with:
    #   JobEnvironment: ${{needs.env_workflow.outputs.JobEnvironment}}  #feature-branch
    #   SourceCodeBranch: ${{github.ref_name}}  #feature/test/1
    #   APP_NAME: ${{github.event.repository.name}}
    #   APP_VERSION: ${{ needs.Build_Docker_ACR.outputs.PACKAGE_VERSION }}
    #   HELM_VALUES_REPO: ${{needs.env_workflow.outputs.HELM_VALUES_REPO}}
    #   HELM_VALUES_BRANCH: ${{needs.env_workflow.outputs.HELM_VALUES_BRANCH}}
    #   AKS_RESOURCE_GROUP: ${{needs.env_workflow.outputs.AKS_RESOURCE_GROUP}}
    #   AKS_NAME: ${{needs.env_workflow.outputs.AKS_NAME}}
    #   AZURE_STORAGE_ACC_NAME: ${{needs.env_workflow.outputs.BLOB_STORAGE_ACC}}
    #   PR_NUMBER="${{ needs.Create_PR.outputs.pull-request-number }}"
    # secrets: #inherit
    #   AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}



name: clean-up_namespace
on: 
  workflow_call:
    inputs:
        JobEnvironment:
          required: true
          type: string
        SourceCodeBranch:
          required: true
          type: string
        HELM_VALUES_REPO:
            required: true
            type: string
        HELM_VALUES_BRANCH:
            required: true
            type: string 
        AKS_RESOURCE_GROUP:
            required: true
            type: string
        AKS_NAME:
            required: true
            type: string
        APP_NAME:
          required: true
          type: string
        APP_VERSION:
          required: true
          type: string
        AZURE_STORAGE_ACC_NAME:
          required: true
          type: string
        PR_NUMBER:
          required: true
          type: string 
    secrets:
        AZURE_CREDENTIALS:
          required: true
             


jobs:
  clean-namespace:
    runs-on: runner-utility
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
            repository: ${{inputs.HELM_VALUES_REPO}} #helm values repo #helm values repo (MuZikZz-Org/Helm-Vaules)
            ref: ${{inputs.HELM_VALUES_BRANCH}} #main
            # token: ${{ secrets.PAT }}
      - run: |
          ls -R
          echo "Check env"
          helm version
          
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Check Pull Request Merge Status and Delete namespace
        id: check-pr-status
        run: |
          # Extract the pull request information from the output of the previous workflow
          PR_NUMBER="${{inputs.PR_NUMBER}}"
          REPO="${{inputs.SourceCodeRepo}}"
          
          # Make a GitHub API request to fetch the pull request details
          PR_DATA=$(curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/$REPO/pulls/$PR_NUMBER)

          result=$(echo "$PR_DATA" | grep -o '"merged": *true')
          echo "$result"          

          echo "Set context k8s"
          az aks get-credentials --resource-group ${{inputs.AKS_RESOURCE_GROUP}} --name ${{inputs.AKS_NAME}}

          # Namespace
          echo "Original Branch Name: ${{inputs.SourceCodeBranch}}"
          # reformat branch name
          finalBranchName=$(echo ${{inputs.SourceCodeBranch}} | sed "s|/|-|g")
          echo "Namespace: ${finalBranchName}"

          # if PR is merge delete namespace
          if [[ result ]]; then
            echo "Pull Request is merged ."
            # check if Namespace exists
            kubectl get namespace ${finalBranchName} > /dev/null 2>&1
            if [ $? -eq 0 ]; then
              echo "Namespace ${finalBranchName} exists."
              kubectl delete namespace ${finalBranchName}
              echo "Deleted namespace ${finalBranchName}"
            else
              echo "Namespace ${finalBranchName} does not exist."
            fi
          else
            echo "Pull Request is not merged. "
          fi

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


            # helm repo add azblob https://${{inputs.AZURE_STORAGE_ACC_NAME}}.blob.core.windows.net/charts
            # helm repo update 

            # helm upgrade --install ${{inputs.APP_NAME}} azblob/${{inputs.APP_NAME}} \
            # --namespace ${finalBranchName} \
            # --values ${{inputs.APP_NAME}}/values-${{inputs.JobEnvironment}}.yaml 